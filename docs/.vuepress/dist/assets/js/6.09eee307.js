(window.webpackJsonp=window.webpackJsonp||[]).push([[6],{433:function(s,n,a){s.exports=a.p+"assets/img/robo3t.f729927a.png"},441:function(s,n,a){"use strict";a.r(n);var e=a(53),t=Object(e.a)({},(function(){var s=this,n=s.$createElement,e=s._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[e("h1",{attrs:{id:"前端构建"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端构建"}},[s._v("#")]),s._v(" 前端构建")]),s._v(" "),e("h2",{attrs:{id:"前端基本环境配置"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端基本环境配置"}},[s._v("#")]),s._v(" 前端基本环境配置")]),s._v(" "),e("p",[s._v("环境需求vue-cli(脚手架)、mongodb、nodejs")]),s._v(" "),e("p",[s._v("在"),e("code",[s._v("mongodb中 数据库 -》集合-》文档")]),s._v("文档的数据结构和JSON基本一样。所有存储在集合中的数据都是 BSON 格式。BSON 是一种类似 JSON 的二进制形式的存储格式，是 Binary JSON 的简称。\n所以我们可以将mongodb想象成一个大json对象处理，传统的数据库中表和表之间的外键关联都不存在了.取而代之的是json格式的类树形结构.这就是转到mongodb之后最大的区别.  设计时把复杂的东西抽象成一个树形结构,而不是像从前那样先抽象成一个个实体,然后再抽象实体之间的关系，对前端而言mongodb做设计比sql做设计要简单很多")]),s._v(" "),e("ol",[e("li",[e("p",[s._v("利用vue-cli初始化项目"),e("code",[s._v("vue create todo_list")])])]),s._v(" "),e("li",[e("p",[s._v("通过brew 安装mongodb")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("使用 OSX 的 brew 来安装 mongodb的命令如下：\n\nsudo brew install mongodb\n要安装支持 TLS/SSL 命令如下：\n\nsudo brew install mongodb --with-openssl\n如果要安装开发版本，可以使用下面的命令：\n\nsudo brew install mongodb --devel\n然后，使用命令mongod --version来查看mongo DB是否安装成功。\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br")])]),e("p",[s._v("后由于mongodb已经不开源头\n我在这里直接安装默认的社区版本，执行"),e("code",[s._v("brew install mongodb-community")]),s._v(" 也可以参考文档安装指定的版本；\n之后采用"),e("code",[s._v("show dbs")]),s._v(" 查看安装是否成功")])])]),s._v(" "),e("ul",[e("li",[e("p",[s._v("如果发现数据库链接不上，可以在~/.bashrc中配置 "),e("code",[s._v("export PATH=/usr/local/Cellar/mongodb-community/4.2.3/bin:${PATH}")])])]),s._v(" "),e("li",[e("p",[s._v("之后执行"),e("code",[s._v("brew services start mongodb-community")]),s._v(" 最后进行mongo连接")]),s._v(" "),e("p",[e("img",{attrs:{src:a(433),alt:""}})])])]),s._v(" "),e("p",[s._v("这里推荐使用"),e("a",{attrs:{href:"https://robomongo.org/download",target:"_blank",rel:"noopener noreferrer"}},[s._v("robo3t"),e("OutboundLink")],1),s._v("这个mongodb可视化工具来快速的构建字典表")]),s._v(" "),e("h2",{attrs:{id:"前端项目结构"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#前端项目结构"}},[s._v("#")]),s._v(" 前端项目结构")]),s._v(" "),e("div",{staticClass:"language- line-numbers-mode"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[s._v("todolist\n|\n└─── NodeApi 后端api提供文件\n│     |--controller  控制层，对数据库进行操作\n|     |--db          数据库实例\n|     |--middlewares node中间件\n|     |--router      向前端暴露的接口\n|     |--app         入口js\n|     |--config      全局配置\n|\n└─── src 前端项目目录\n│     |--api           前端请求接口\n|     |--assets        图片相关\n|     |--components    项目公关组件\n|     |--router        路由\n|     |--views         视图层\n")])]),s._v(" "),e("div",{staticClass:"line-numbers-wrapper"},[e("span",{staticClass:"line-number"},[s._v("1")]),e("br"),e("span",{staticClass:"line-number"},[s._v("2")]),e("br"),e("span",{staticClass:"line-number"},[s._v("3")]),e("br"),e("span",{staticClass:"line-number"},[s._v("4")]),e("br"),e("span",{staticClass:"line-number"},[s._v("5")]),e("br"),e("span",{staticClass:"line-number"},[s._v("6")]),e("br"),e("span",{staticClass:"line-number"},[s._v("7")]),e("br"),e("span",{staticClass:"line-number"},[s._v("8")]),e("br"),e("span",{staticClass:"line-number"},[s._v("9")]),e("br"),e("span",{staticClass:"line-number"},[s._v("10")]),e("br"),e("span",{staticClass:"line-number"},[s._v("11")]),e("br"),e("span",{staticClass:"line-number"},[s._v("12")]),e("br"),e("span",{staticClass:"line-number"},[s._v("13")]),e("br"),e("span",{staticClass:"line-number"},[s._v("14")]),e("br"),e("span",{staticClass:"line-number"},[s._v("15")]),e("br"),e("span",{staticClass:"line-number"},[s._v("16")]),e("br")])]),e("p",[s._v("前端主要的界面和设计就不细说，有兴趣的可以去github上看一下交互细节和页面逻辑。"),e("a",{attrs:{href:"https://github.com/czkm/TodoList/tree/master",target:"_blank",rel:"noopener noreferrer"}},[s._v("github地址"),e("OutboundLink")],1)])])}),[],!1,null,null,null);n.default=t.exports}}]);